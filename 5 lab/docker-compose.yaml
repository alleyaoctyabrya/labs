services:
  db:
    image: mysql:8.0
    container_name: mysql-db
    env_file: .env
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-backend
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    env_file: .env
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "10002:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local